{
  "address": "0xe6c021Eb75287904e6aad578F22d8AE272b9384F",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IBaseOracle",
          "name": "_base",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "EXCEED_DEVIATION",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "deviation",
          "type": "uint256"
        }
      ],
      "name": "OUT_OF_DEVIATION_CAP",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "delayTime",
          "type": "uint256"
        }
      ],
      "name": "TOO_LONG_DELAY",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "mean",
          "type": "uint256"
        }
      ],
      "name": "TOO_LOW_MEAN",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ZERO_ADDRESS",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxPriceDeviation",
          "type": "uint256"
        }
      ],
      "name": "SetPriceDeviation",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "base",
      "outputs": [
        {
          "internalType": "contract IBaseOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "maxPriceDeviations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxPriceDeviation",
          "type": "uint256"
        }
      ],
      "name": "setPriceDeviation",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IICHIVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "spotPrice0InToken1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IICHIVault",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "twapPrice0InToken1",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x89dd58a65da81f57a1210078683452c34f9457feac3e449ff6ce425afa1e39f8",
  "receipt": {
    "to": null,
    "from": "0x83B801Bc28340d63b560b70036ccaf48E5995ae9",
    "contractAddress": "0xe6c021Eb75287904e6aad578F22d8AE272b9384F",
    "transactionIndex": 0,
    "gasUsed": "1008982",
    "logsBloom": "0x
    "blockHash": "0xfcefe809dcf5cb61657f99e06b0f117888c715ce7353a68d737033b1167363c6",
    "transactionHash": "0x89dd58a65da81f57a1210078683452c34f9457feac3e449ff6ce425afa1e39f8",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 17942250,
        "transactionHash": "0x89dd58a65da81f57a1210078683452c34f9457feac3e449ff6ce425afa1e39f8",
        "address": "0xe6c021Eb75287904e6aad578F22d8AE272b9384F",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000083b801bc28340d63b560b70036ccaf48e5995ae9"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xfcefe809dcf5cb61657f99e06b0f117888c715ce7353a68d737033b1167363c6"
      }
    ],
    "blockNumber": 17942250,
    "cumulativeGasUsed": "1008982",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x504F2e3De65F12074a0a43399f307FeFfB186aCd"
  ],
  "numDeployments": 1,
  "solcInputHash": "40a5e959dbaee40ef6eeed84d8383760",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IBaseOracle\",\"name\":\"_base\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"EXCEED_DEVIATION\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"deviation\",\"type\":\"uint256\"}],\"name\":\"OUT_OF_DEVIATION_CAP\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"delayTime\",\"type\":\"uint256\"}],\"name\":\"TOO_LONG_DELAY\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"mean\",\"type\":\"uint256\"}],\"name\":\"TOO_LOW_MEAN\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZERO_ADDRESS\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxPriceDeviation\",\"type\":\"uint256\"}],\"name\":\"SetPriceDeviation\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"base\",\"outputs\":[{\"internalType\":\"contract IBaseOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"maxPriceDeviations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxPriceDeviation\",\"type\":\"uint256\"}],\"name\":\"setPriceDeviation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IICHIVault\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"spotPrice0InToken1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IICHIVault\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"twapPrice0InToken1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"BlueberryProtocol\",\"details\":\"The logic of this oracle is using legacy & traditional mathematics of Uniswap V2 Lp Oracle.      Base token prices are fetched from Chainlink or Band Protocol.      To prevent flashloan price manipulations, it compares spot & twap prices from Uni V3 Pool.\",\"events\":{\"SetPriceDeviation(address,uint256)\":{\"params\":{\"maxPriceDeviation\":\"The new maximum price deviation (in 1e18 format).\",\"token\":\"The address of the token.\"}}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_base\":\"The base oracle instance.\"}},\"getPrice(address)\":{\"params\":{\"token\":\"The vault token to get the price of.\"},\"returns\":{\"_0\":\"price USD price of token in 18 decimal\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setPriceDeviation(address,uint256)\":{\"details\":\"Input token is the underlying token of ICHI Vaults which is token0 or token1 of Uni V3 Pool\",\"params\":{\"maxPriceDeviation\":\"Max price deviation (in 1e18) of price feeds\",\"token\":\"Token to price deviation\"}},\"spotPrice0InToken1(address)\":{\"details\":\"Returns token0 price of 1e18 amount\",\"params\":{\"vault\":\"ICHI Vault address\"},\"returns\":{\"_0\":\"price spot price of token0 quoted in token1\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"twapPrice0InToken1(address)\":{\"details\":\"Returns token0 price of 1e18 amount\",\"params\":{\"vault\":\"ICHI Vault address\"},\"returns\":{\"_0\":\"price spot price of token0 quoted in token1\"}}},\"title\":\"Ichi Vault Oracle\",\"version\":1},\"userdoc\":{\"errors\":{\"EXCEED_DEVIATION()\":[{\"notice\":\"Thrown when the deviation value exceeds the threshold.\"}],\"OUT_OF_DEVIATION_CAP(uint256)\":[{\"notice\":\"Thrown when the price deviation exceeds allowed limits.\"}],\"TOO_LONG_DELAY(uint256)\":[{\"notice\":\"Thrown when the delay time exceeds allowed limits.\"}],\"TOO_LOW_MEAN(uint256)\":[{\"notice\":\"Thrown when the mean price is below the acceptable threshold.\"}],\"ZERO_ADDRESS()\":[{\"notice\":\"Thrown when the address provided is the zero address.\"}]},\"events\":{\"SetPriceDeviation(address,uint256)\":{\"notice\":\"Event emitted when the maximum price deviation for a token is set or updated.\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructs a new instance of the contract.\"},\"getPrice(address)\":{\"notice\":\"Return vault token price in USD, with 18 decimals of precision.\"},\"maxPriceDeviations(address)\":{\"notice\":\"Mapping to keep track of the maximum price deviation allowed for each token\"},\"setPriceDeviation(address,uint256)\":{\"notice\":\"Set price deviations for given token\"},\"spotPrice0InToken1(address)\":{\"notice\":\"Get token0 spot price quoted in token1\"},\"twapPrice0InToken1(address)\":{\"notice\":\"Get token0 twap price quoted in token1\"}},\"notice\":\"Oracle contract provides price feeds of Ichi Vault tokens\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracle/IchiVaultOracle.sol\":\"IchiVaultOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IBaseOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.16;\\n\\n/// @title IBaseOracle\\n/// @notice Interface for a basic oracle that provides price data for assets.\\ninterface IBaseOracle {\\n    /// @notice Returns the USD value of a given ERC-20 token, normalized to 1e18 decimals.\\n    /// @dev The value returned is multiplied by 10**18 to maintain precision.\\n    /// @param token Address of the ERC-20 token for which the price is requested.\\n    /// @return The USD price of the given token, multiplied by 10**18.\\n    function getPrice(address token) external returns (uint256);\\n}\\n\",\"keccak256\":\"0x0f1ac0fc8a41365c1c8fdc16f5851e84e49b937b41a86b4f18c8cf266d35daf8\",\"license\":\"MIT\"},\"contracts/interfaces/ichi/IICHIVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\n\\ninterface IICHIVault is IERC20, IERC20Metadata {\\n    function ichiVaultFactory() external view returns (address);\\n\\n    function pool() external view returns (address);\\n\\n    function token0() external view returns (address);\\n\\n    function token1() external view returns (address);\\n\\n    function allowToken0() external view returns (bool);\\n\\n    function allowToken1() external view returns (bool);\\n\\n    function fee() external view returns (uint24);\\n\\n    function tickSpacing() external view returns (int24);\\n\\n    function currentTick() external view returns (int24);\\n\\n    function twapPeriod() external view returns (uint32);\\n\\n    function affiliate() external view returns (address);\\n\\n    function baseLower() external view returns (int24);\\n\\n    function baseUpper() external view returns (int24);\\n\\n    function limitLower() external view returns (int24);\\n\\n    function limitUpper() external view returns (int24);\\n\\n    function deposit0Max() external view returns (uint256);\\n\\n    function deposit1Max() external view returns (uint256);\\n\\n    function maxTotalSupply() external view returns (uint256);\\n\\n    function hysteresis() external view returns (uint256);\\n\\n    function getTotalAmounts() external view returns (uint256, uint256);\\n\\n    function deposit(uint256, uint256, address) external returns (uint256);\\n\\n    function withdraw(uint256, address) external returns (uint256, uint256);\\n\\n    function rebalance(\\n        int24 _baseLower,\\n        int24 _baseUpper,\\n        int24 _limitLower,\\n        int24 _limitUpper,\\n        int256 swapQuantity\\n    ) external;\\n\\n    function setDepositMax(uint256 _deposit0Max, uint256 _deposit1Max) external;\\n\\n    function setAffiliate(address _affiliate) external;\\n\\n    event DeployICHIVault(\\n        address indexed sender,\\n        address indexed pool,\\n        bool allowToken0,\\n        bool allowToken1,\\n        address owner,\\n        uint256 twapPeriod\\n    );\\n\\n    event SetTwapPeriod(address sender, uint32 newTwapPeriod);\\n\\n    event Deposit(\\n        address indexed sender,\\n        address indexed to,\\n        uint256 shares,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    event Withdraw(\\n        address indexed sender,\\n        address indexed to,\\n        uint256 shares,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    event Rebalance(\\n        int24 tick,\\n        uint256 totalAmount0,\\n        uint256 totalAmount1,\\n        uint256 feeAmount0,\\n        uint256 feeAmount1,\\n        uint256 totalSupply\\n    );\\n\\n    event MaxTotalSupply(address indexed sender, uint256 maxTotalSupply);\\n\\n    event Hysteresis(address indexed sender, uint256 hysteresis);\\n\\n    event DepositMax(\\n        address indexed sender,\\n        uint256 deposit0Max,\\n        uint256 deposit1Max\\n    );\\n\\n    event Affiliate(address indexed sender, address affiliate);\\n}\\n\",\"keccak256\":\"0x62f6db3004959a6b933e3694df53b1eaa3e301dd5640378973580814f214da4a\",\"license\":\"MIT\"},\"contracts/libraries/UniV3/UniV3WrappedLibContainer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.16;\\n\\nlibrary UniV3WrappedLibContainer {\\n    // TickMath\\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\\n    uint160 internal constant MAX_SQRT_RATIO =\\n        1461446703485210103287273052203988822378723970342;\\n\\n    // OracleLibrary\\n    function consult(\\n        address pool,\\n        uint32 secondsAgo\\n    )\\n        external\\n        view\\n        returns (int24 arithmeticMeanTick, uint128 harmonicMeanLiquidity)\\n    {}\\n\\n    function getQuoteAtTick(\\n        int24 tick,\\n        uint128 baseAmount,\\n        address baseToken,\\n        address quoteToken\\n    ) external pure returns (uint256 quoteAmount) {}\\n\\n    function getSqrtRatioAtTick(\\n        int24 tick\\n    ) external pure returns (uint160 sqrtPriceX96) {}\\n\\n    function getAmountsForLiquidity(\\n        uint160 sqrtRatioX96,\\n        uint160 sqrtRatioAX96,\\n        uint160 sqrtRatioBX96,\\n        uint128 liquidity\\n    ) external pure returns (uint256 amount0, uint256 amount1) {}\\n\\n    function getLiquidityForAmounts(\\n        uint160 sqrtRatioX96,\\n        uint160 sqrtRatioAX96,\\n        uint160 sqrtRatioBX96,\\n        uint256 amount0,\\n        uint256 amount1\\n    ) external pure returns (uint128 liquidity) {}\\n}\\n\",\"keccak256\":\"0xbedb699d7097d45223840409fe849fb1c9ffc248c072ec17a020e99676de48fe\",\"license\":\"MIT\"},\"contracts/oracle/BaseOracleExt.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/*\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557     \\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d \\u255a\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d  \\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d  \\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557  \\u255a\\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d   \\u255a\\u2550\\u255d\\n*/\\n\\npragma solidity 0.8.16;\\n\\nimport \\\"../utils/BlueBerryConst.sol\\\" as Constants;\\n\\nabstract contract BaseOracleExt {\\n\\n    /*//////////////////////////////////////////////////////////////////////////\\n                                      FUNCTIONS\\n    //////////////////////////////////////////////////////////////////////////*/\\n\\n    /// @notice Internal function to validate deviations of 2 given prices\\n    /// @param price0 First price to validate, base 1e18\\n    /// @param price1 Second price to validate, base 1e18\\n    /// @param maxPriceDeviation Max price deviation of 2 prices, base 10000\\n    function _isValidPrices(\\n        uint256 price0,\\n        uint256 price1,\\n        uint256 maxPriceDeviation\\n    ) internal pure returns (bool) {\\n        uint256 maxPrice = price0 > price1 ? price0 : price1;\\n        uint256 minPrice = price0 > price1 ? price1 : price0;\\n        return\\n            (((maxPrice - minPrice) * Constants.DENOMINATOR) / maxPrice) <=\\n            maxPriceDeviation;\\n    }\\n}\\n\",\"keccak256\":\"0x867fd48b05da13653cb1e28f3a05bb444eeff80333a34c3b191f4a32344b0fac\",\"license\":\"MIT\"},\"contracts/oracle/IchiVaultOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/*\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557     \\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d \\u255a\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d  \\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d  \\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557  \\u255a\\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d   \\u255a\\u2550\\u255d\\n*/\\n\\npragma solidity 0.8.16;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nimport \\\"./UsingBaseOracle.sol\\\";\\nimport \\\"./BaseOracleExt.sol\\\";\\nimport \\\"../utils/BlueBerryErrors.sol\\\" as Errors;\\nimport \\\"../libraries/UniV3/UniV3WrappedLibContainer.sol\\\";\\nimport \\\"../interfaces/IBaseOracle.sol\\\";\\nimport \\\"../interfaces/ichi/IICHIVault.sol\\\";\\n\\n/// @author BlueberryProtocol\\n/// @title Ichi Vault Oracle\\n/// @notice Oracle contract provides price feeds of Ichi Vault tokens\\n/// @dev The logic of this oracle is using legacy & traditional mathematics of Uniswap V2 Lp Oracle.\\n///      Base token prices are fetched from Chainlink or Band Protocol.\\n///      To prevent flashloan price manipulations, it compares spot & twap prices from Uni V3 Pool.\\ncontract IchiVaultOracle is\\n    UsingBaseOracle,\\n    IBaseOracle,\\n    Ownable,\\n    BaseOracleExt\\n{\\n    /*//////////////////////////////////////////////////////////////////////////\\n                                      PUBLIC STORAGE \\n    //////////////////////////////////////////////////////////////////////////*/\\n\\n    /// Mapping to keep track of the maximum price deviation allowed for each token\\n    mapping(address => uint256) public maxPriceDeviations;\\n\\n    /*//////////////////////////////////////////////////////////////////////////\\n                                     CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////////////////*/\\n    \\n    /// @notice Constructs a new instance of the contract.\\n    /// @param _base The base oracle instance.\\n    constructor(IBaseOracle _base) UsingBaseOracle(_base) {}\\n\\n    /*//////////////////////////////////////////////////////////////////////////\\n                                      EVENTS\\n    //////////////////////////////////////////////////////////////////////////*/\\n\\n    /// @notice Event emitted when the maximum price deviation for a token is set or updated.\\n    /// @param token The address of the token.\\n    /// @param maxPriceDeviation The new maximum price deviation (in 1e18 format).\\n    event SetPriceDeviation(address indexed token, uint256 maxPriceDeviation);\\n\\n    /*//////////////////////////////////////////////////////////////////////////\\n                                      FUNCTIONS\\n    //////////////////////////////////////////////////////////////////////////*/\\n\\n    /// @notice Set price deviations for given token\\n    /// @dev Input token is the underlying token of ICHI Vaults which is token0 or token1 of Uni V3 Pool\\n    /// @param token Token to price deviation\\n    /// @param maxPriceDeviation Max price deviation (in 1e18) of price feeds\\n    function setPriceDeviation(\\n        address token,\\n        uint256 maxPriceDeviation\\n    ) external onlyOwner {\\n        /// Validate inputs\\n        if (token == address(0)) revert Errors.ZERO_ADDRESS();\\n        if (maxPriceDeviation > Constants.MAX_PRICE_DEVIATION)\\n            revert Errors.OUT_OF_DEVIATION_CAP(maxPriceDeviation);\\n\\n        maxPriceDeviations[token] = maxPriceDeviation;\\n        emit SetPriceDeviation(token, maxPriceDeviation);\\n    }\\n\\n    /// @notice Get token0 spot price quoted in token1\\n    /// @dev Returns token0 price of 1e18 amount\\n    /// @param vault ICHI Vault address\\n    /// @return price spot price of token0 quoted in token1\\n    function spotPrice0InToken1(\\n        IICHIVault vault\\n    ) public view returns (uint256) {\\n        return\\n            UniV3WrappedLibContainer.getQuoteAtTick(\\n                vault.currentTick(), // current tick\\n                uint128(Constants.PRICE_PRECISION), // amountIn\\n                vault.token0(), // tokenIn\\n                vault.token1() // tokenOut\\n            );\\n    }\\n\\n    /// @notice Get token0 twap price quoted in token1\\n    /// @dev Returns token0 price of 1e18 amount\\n    /// @param vault ICHI Vault address\\n    /// @return price spot price of token0 quoted in token1\\n    function twapPrice0InToken1(\\n        IICHIVault vault\\n    ) public view returns (uint256) {\\n        uint32 twapPeriod = vault.twapPeriod();\\n        if (twapPeriod > Constants.MAX_TIME_GAP)\\n            revert Errors.TOO_LONG_DELAY(twapPeriod);\\n        if (twapPeriod < Constants.MIN_TIME_GAP)\\n            revert Errors.TOO_LOW_MEAN(twapPeriod);\\n        (int24 twapTick, ) = UniV3WrappedLibContainer.consult(\\n            vault.pool(),\\n            twapPeriod\\n        );\\n        return\\n            UniV3WrappedLibContainer.getQuoteAtTick(\\n                twapTick,\\n                uint128(Constants.PRICE_PRECISION), /// amountIn\\n                vault.token0(), /// tokenIn\\n                vault.token1() /// tokenOut\\n            );\\n    }\\n\\n    /// @notice Return vault token price in USD, with 18 decimals of precision.\\n    /// @param token The vault token to get the price of.\\n    /// @return price USD price of token in 18 decimal\\n    function getPrice(address token) external override returns (uint256) {\\n        IICHIVault vault = IICHIVault(token);\\n        uint256 totalSupply = vault.totalSupply();\\n        if (totalSupply == 0) return 0;\\n\\n        address token0 = vault.token0();\\n        address token1 = vault.token1();\\n\\n        /// Check price manipulations on Uni V3 pool by flashloan attack\\n        uint256 spotPrice = spotPrice0InToken1(vault);\\n        uint256 twapPrice = twapPrice0InToken1(vault);\\n        uint256 maxPriceDeviation = maxPriceDeviations[token0];\\n        if (!_isValidPrices(spotPrice, twapPrice, maxPriceDeviation))\\n            revert Errors.EXCEED_DEVIATION();\\n\\n        /// Total reserve / total supply\\n        (uint256 r0, uint256 r1) = vault.getTotalAmounts();\\n        uint256 px0 = base.getPrice(address(token0));\\n        uint256 px1 = base.getPrice(address(token1));\\n        uint256 t0Decimal = IERC20Metadata(token0).decimals();\\n        uint256 t1Decimal = IERC20Metadata(token1).decimals();\\n\\n        uint256 totalReserve = (r0 * px0) /\\n            10 ** t0Decimal +\\n            (r1 * px1) /\\n            10 ** t1Decimal;\\n\\n        return (totalReserve * 10 ** vault.decimals()) / totalSupply;\\n    }\\n}\\n\",\"keccak256\":\"0x7055fcff0f7d623c818aa8585fb0a29bf645525aa8331ae7a0441bb388e203be\",\"license\":\"MIT\"},\"contracts/oracle/UsingBaseOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/*\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557     \\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d \\u255a\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d  \\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d  \\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557  \\u255a\\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d   \\u255a\\u2550\\u255d\\n*/\\n\\npragma solidity 0.8.16;\\n\\nimport \\\"../interfaces/IBaseOracle.sol\\\";\\n\\n/// @title UsingBaseOracle\\n/// @dev This contract serves as a base for other contracts that need access \\n/// to an external oracle service. It provides an immutable reference to a \\n/// specified oracle source.\\ncontract UsingBaseOracle {\\n    IBaseOracle public immutable base; // Base oracle source\\n\\n    /*//////////////////////////////////////////////////////////////////////////\\n                                     CONSTRUCTOR\\n    //////////////////////////////////////////////////////////////////////////*/\\n    \\n    /// @notice Constructs a new instance of the contract.\\n    /// @dev Initializes the contract with a given oracle source.\\n    /// @param _base The address of the oracle to be used as a data source.\\n    constructor(IBaseOracle _base) {\\n        base = _base;\\n    }\\n}\\n\",\"keccak256\":\"0xa7539940cbac33c9a82d997a6a7e3ed05cd78ac21548bc653a5eb9da9931448d\",\"license\":\"MIT\"},\"contracts/utils/BlueBerryConst.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/*\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557     \\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d \\u255a\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d  \\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d  \\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557  \\u255a\\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d   \\u255a\\u2550\\u255d\\n*/\\n\\n/// title BlueberryConst\\n/// @notice containing all general constants used in Blueberry protocol\\npragma solidity 0.8.16;\\n\\n/// @dev Common denominator for percentage-based calculations.\\nuint256 constant DENOMINATOR = 10000;\\n\\n/// @dev Minimum threshold for liquidity operations, represented as a fraction of the DENOMINATOR.\\nuint256 constant MIN_LIQ_THRESHOLD = 8000; // represent 80%\\n\\n/// @dev Precision factor to maintain price accuracy.\\nuint256 constant PRICE_PRECISION = 1e18;\\n\\n/// @dev Maximum allowed price deviation, represented as a fraction of the DENOMINATOR.\\nuint256 constant MAX_PRICE_DEVIATION = 1000; // represent 10%\\n\\n/// @dev Minimum time interval for specific time-dependent operations.\\nuint32 constant MIN_TIME_GAP = 1 hours;\\n\\n/// @dev Maximum time interval for specific time-dependent operations.\\nuint32 constant MAX_TIME_GAP = 2 days;\\n\\n/// @dev Maximum allowed fee rate, represented as a fraction of the DENOMINATOR.\\nuint256 constant MAX_FEE_RATE = 2000; // represent 20%\\n\\n/// @dev Maximum allowed time for vault withdrawal fee calculations.\\nuint256 constant MAX_WITHDRAW_VAULT_FEE_WINDOW = 60 days;\\n\\n/// @dev Maximum delay permitted for swap operations.\\nuint32 constant MAX_DELAY_ON_SWAP = 2 hours;\\n\\n/// @dev Allowed grace period time for sequencer operations.\\nuint32 constant SEQUENCER_GRACE_PERIOD_TIME = 3600;\\n\\n/// @dev Precision factor for Chainlink price feed values.\\nuint256 constant CHAINLINK_PRICE_FEED_PRECISION = 1e8;\\n\\n/// @dev Warm-up period before a liquidation repayment can be initiated.\\nuint256 constant LIQUIDATION_REPAY_WARM_UP_PERIOD = 4 hours;\\n\",\"keccak256\":\"0xc72e559e5caa385508ef3158993ec99e13e89b4c4b0b40156b34c0fb710e5952\",\"license\":\"MIT\"},\"contracts/utils/BlueBerryErrors.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n/*\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557     \\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2557   \\u2588\\u2588\\u2557\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2550\\u2550\\u255d\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2557 \\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557  \\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d \\u255a\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551     \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d  \\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u255d  \\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557\\u2588\\u2588\\u2554\\u2550\\u2550\\u2588\\u2588\\u2557  \\u255a\\u2588\\u2588\\u2554\\u255d\\n\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u255a\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2554\\u255d\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2588\\u2557\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551\\u2588\\u2588\\u2551  \\u2588\\u2588\\u2551   \\u2588\\u2588\\u2551\\n\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d \\u255a\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d\\u255a\\u2550\\u255d  \\u255a\\u2550\\u255d   \\u255a\\u2550\\u255d\\n*/\\n\\n/// title BlueberryErrors\\n/// @notice containing all errors used in Blueberry protocol\\npragma solidity 0.8.16;\\n\\n/*//////////////////////////////////////////////////////////////////////////\\n                                COMMON ERRORS\\n//////////////////////////////////////////////////////////////////////////*/\\n\\n/// @notice Thrown when an action involves zero amount of tokens.\\nerror ZERO_AMOUNT();\\n\\n/// @notice Thrown when the address provided is the zero address.\\nerror ZERO_ADDRESS();\\n\\n/// @notice Thrown when the lengths of input arrays do not match.\\nerror INPUT_ARRAY_MISMATCH();\\n\\n/*//////////////////////////////////////////////////////////////////////////\\n                                ORACLE ERRORS\\n//////////////////////////////////////////////////////////////////////////*/\\n\\n/// @notice Thrown when the delay time exceeds allowed limits.\\nerror TOO_LONG_DELAY(uint256 delayTime);\\n\\n/// @notice Thrown when there's no maximum delay set for a token.\\nerror NO_MAX_DELAY(address token);\\n\\n/// @notice Thrown when the price information for a token is outdated.\\nerror PRICE_OUTDATED(address token);\\n\\n/// @notice Thrown when there's no symbol mapping for the token.\\nerror NO_SYM_MAPPING(address token);\\n\\n/// @notice Thrown when the price obtained is negative.\\nerror PRICE_NEGATIVE(address token);\\n\\n/// @notice Thrown when the sequencer is offline\\nerror SEQUENCER_DOWN(address sequencer);\\n\\n/// @notice Thrown when the grace period for a sequencer is not over yet.\\nerror SEQUENCER_GRACE_PERIOD_NOT_OVER(address sequencer);\\n\\n/// @notice Thrown when the price deviation exceeds allowed limits.\\nerror OUT_OF_DEVIATION_CAP(uint256 deviation);\\n\\n/// @notice Thrown when the number of sources exceeds the allowed length.\\nerror EXCEED_SOURCE_LEN(uint256 length);\\n\\n/// @notice Thrown when no primary source is available for the token.\\nerror NO_PRIMARY_SOURCE(address token);\\n\\n/// @notice Thrown when no valid price source is available for the token.\\nerror NO_VALID_SOURCE(address token);\\n\\n/// @notice Thrown when the deviation value exceeds the threshold.\\nerror EXCEED_DEVIATION();\\n\\n/// @notice Thrown when the mean price is below the acceptable threshold.\\nerror TOO_LOW_MEAN(uint256 mean);\\n\\n/// @notice Thrown when no mean price is set for the token.\\nerror NO_MEAN(address token);\\n\\n/// @notice Thrown when no stable pool exists for the token.\\nerror NO_STABLEPOOL(address token);\\n\\n/// @notice Thrown when the price fetch process fails for a token.\\nerror PRICE_FAILED(address token);\\n\\n/// @notice Thrown when the liquidation threshold is set too high.\\nerror LIQ_THRESHOLD_TOO_HIGH(uint256 threshold);\\n\\n/// @notice Thrown when the liquidation threshold is set too low.\\nerror LIQ_THRESHOLD_TOO_LOW(uint256 threshold);\\n\\n/// @notice Thrown when the oracle doesn't support a specific token.\\nerror ORACLE_NOT_SUPPORT(address token);\\n\\n/// @notice Thrown when the oracle doesn't support a specific LP pair token.\\nerror ORACLE_NOT_SUPPORT_LP(address lp);\\n\\n/// @notice Thrown when the oracle doesn't support a specific wToken.\\nerror ORACLE_NOT_SUPPORT_WTOKEN(address wToken);\\n\\n/// @notice Thrown when there is no route to fetch data for the oracle\\nerror NO_ORACLE_ROUTE(address token);\\n\\n/// @notice Thrown when a value is out of an acceptable range.\\nerror VALUE_OUT_OF_RANGE();\\n\\n/// @notice Thrown when specified limits are incorrect.\\nerror INCORRECT_LIMITS();\\n\\n/// @notice Thrown when Curve LP is already registered.\\nerror CRV_LP_ALREADY_REGISTERED(address lp);\\n\\n\\n/*//////////////////////////////////////////////////////////////////////////\\n                            GENERAL SPELL ERRORS\\n//////////////////////////////////////////////////////////////////////////*/\\n\\n/// @notice Thrown when the caller isn't recognized as a bank.\\nerror NOT_BANK(address caller);\\n\\n/// @notice Thrown when refunding ETH encounters an issue.\\nerror REFUND_ETH_FAILED(uint256 balance);\\n\\n/// @notice Thrown when a transaction isn't initiated by WETH.\\nerror NOT_FROM_WETH(address from);\\n\\n/// @notice Thrown when the liquidity pool isn't whitelisted\\nerror LP_NOT_WHITELISTED(address lp);\\n\\n/// @notice Thrown when the collateral doesn't exist for a strategy.\\nerror COLLATERAL_NOT_EXIST(uint256 strategyId, address colToken);\\n\\n/// @notice Thrown when the strategy ID doesn't correspond to an existing strategy.\\nerror STRATEGY_NOT_EXIST(address spell, uint256 strategyId);\\n\\n/// @notice Thrown when the position size exceeds maximum limits.\\nerror EXCEED_MAX_POS_SIZE(uint256 strategyId);\\n\\n/// @notice Thrown when the position size is below minimum requirements.\\nerror EXCEED_MIN_POS_SIZE(uint256 strategyId);\\n\\n/// @notice Thrown when the loan-to-value ratio exceeds allowed maximum.\\nerror EXCEED_MAX_LTV();\\n\\n/// @notice Thrown when the strategy ID provided is incorrect.\\nerror INCORRECT_STRATEGY_ID(uint256 strategyId);\\n\\n/// @notice Thrown when the position size is invalid.\\nerror INVALID_POS_SIZE();\\n\\n/// @notice Thrown when an incorrect liquidity pool token is provided.\\nerror INCORRECT_LP(address lpToken);\\n\\n/// @notice Thrown when an incorrect pool ID is provided.\\nerror INCORRECT_PID(uint256 pid);\\n\\n/// @notice Thrown when an incorrect collateral token is provided.\\nerror INCORRECT_COLTOKEN(address colToken);\\n\\n/// @notice Thrown when an incorrect underlying token is provided.\\nerror INCORRECT_UNDERLYING(address uToken);\\nerror INCORRECT_DEBT(address debtToken);\\nerror NOT_FROM_UNIV3(address sender);\\nerror SWAP_FAILED(address swapToken);\\n\\n\\n/*//////////////////////////////////////////////////////////////////////////\\n                            CURVE SPELL ERRORS\\n//////////////////////////////////////////////////////////////////////////*/\\n\\n/// @notice Thrown when no gauge is present.\\nerror NO_GAUGE();\\n\\n/// @notice Thrown when a gauge already exists for the provided pid and gid.\\nerror EXISTING_GAUGE(uint256 pid, uint256 gid);\\n\\n/// @notice Thrown when no Curve pool is found for the given pid.\\nerror NO_CURVE_POOL(uint256 pid);\\n\\n/// @notice Thrown when no LP has been registered.\\nerror NO_LP_REGISTERED(address lp);\\n\\n\\n/*//////////////////////////////////////////////////////////////////////////\\n                                VAULT ERRORS\\n//////////////////////////////////////////////////////////////////////////*/\\n\\n/// @notice Thrown when borrowing from the vault fails.\\nerror BORROW_FAILED(uint256 amount);\\n\\n/// @notice Thrown when repaying to the vault fails.\\nerror REPAY_FAILED(uint256 amount);\\n\\n/// @notice Thrown when lending to the vault fails.\\nerror LEND_FAILED(uint256 amount);\\n\\n/// @notice Thrown when redeeming from the vault fails.\\nerror REDEEM_FAILED(uint256 amount);\\n\\n/*//////////////////////////////////////////////////////////////////////////\\n                                WRAPPER ERRORS\\n//////////////////////////////////////////////////////////////////////////*/\\n\\n/// @notice Thrown when an invalid token ID is provided.\\nerror INVALID_TOKEN_ID(uint256 tokenId);\\n\\n/// @notice Thrown when an incorrect pool ID is provided.\\nerror BAD_PID(uint256 pid);\\n\\n/// @notice Thrown when a mismatch in reward per share is detected.\\nerror BAD_REWARD_PER_SHARE(uint256 rewardPerShare);\\n\\n/*//////////////////////////////////////////////////////////////////////////\\n                                BANK ERRORS\\n//////////////////////////////////////////////////////////////////////////*/\\n\\n/// @notice Thrown when a function is called without a required execution flag.\\nerror NOT_UNDER_EXECUTION();\\n\\n/// @notice Thrown when a transaction isn't initiated \\n/// by an externally owned account (EOA).\\nerror NOT_EOA(address from);\\n\\n/// @notice Thrown when a transaction isn't initiated by the expected spell.\\nerror NOT_FROM_SPELL(address from);\\n\\n/// @notice Thrown when the sender is not the owner of a given position ID.\\nerror NOT_FROM_OWNER(uint256 positionId, address sender);\\n\\n\\n/// @notice Thrown when a spell address isn't whitelisted.\\nerror SPELL_NOT_WHITELISTED(address spell);\\n\\n/// @notice Thrown when a token isn't whitelisted.\\nerror TOKEN_NOT_WHITELISTED(address token);\\n\\n/// @notice Thrown when a bank isn't listed for a given token.\\nerror BANK_NOT_LISTED(address token);\\n\\n/// @notice Thrown when a bank is already listed for a given token.\\nerror BANK_ALREADY_LISTED();\\n\\n/// @notice Thrown when the bank limit is reached.\\nerror BANK_LIMIT();\\n\\n/// @notice Thrown when the BTOKEN is already added.\\nerror BTOKEN_ALREADY_ADDED();\\n\\n/// @notice Thrown when the lending action isn't allowed.\\nerror LEND_NOT_ALLOWED();\\n\\n/// @notice Thrown when the borrowing action isn't allowed.\\nerror BORROW_NOT_ALLOWED();\\n\\n/// @notice Thrown when the repaying action isn't allowed.\\nerror REPAY_NOT_ALLOWED();\\n\\n/// @notice Thrown when the redeeming action isn't allowed.\\nerror WITHDRAW_LEND_NOT_ALLOWED();\\n\\n/// @notice Thrown when certain actions are locked.\\nerror LOCKED();\\n\\n/// @notice Thrown when an action isn't executed.\\nerror NOT_IN_EXEC();\\n\\n/// @notice Thrown when the repayment allowance hasn't been warmed up.\\nerror REPAY_ALLOW_NOT_WARMED_UP();\\n\\n/// @notice Thrown when a different collateral type exists.\\nerror DIFF_COL_EXIST(address collToken);\\n\\n/// @notice Thrown when a position is not eligible for liquidation.\\nerror NOT_LIQUIDATABLE(uint256 positionId);\\n\\n/// @notice Thrown when a position is flagged as bad or invalid.\\nerror BAD_POSITION(uint256 posId);\\n\\n/// @notice Thrown when collateral for a specific position is flagged as bad or invalid.\\nerror BAD_COLLATERAL(uint256 positionId);\\n\\n/// @notice Thrown when there's insufficient collateral for an operation.\\nerror INSUFFICIENT_COLLATERAL();\\n\\n/// @notice Thrown when an attempted repayment exceeds the actual debt.\\nerror REPAY_EXCEEDS_DEBT(uint256 repay, uint256 debt);\\n\\n/// @notice Thrown when an invalid utility token is provided.\\nerror INVALID_UTOKEN(address uToken);\\n\\n/// @notice Thrown when a borrow operation results in zero shares.\\nerror BORROW_ZERO_SHARE(uint256 borrowAmount);\\n\\n/*//////////////////////////////////////////////////////////////////////////\\n                            CONFIGURATION ERRORS\\n//////////////////////////////////////////////////////////////////////////*/\\n\\n/// @notice Thrown when slippage exceeds the allowed limit.\\nerror EXCEED_SLIPPAGE(uint256 ratio);\\n\\n/// @notice Thrown when a certain ratio is too high for an operation.\\nerror RATIO_TOO_HIGH(uint256 ratio);\\n\\n/// @notice Thrown when an invalid fee distribution is detected.\\nerror INVALID_FEE_DISTRIBUTION();\\n\\n/// @notice Thrown when no treasury is set for fee distribution.\\nerror NO_TREASURY_SET();\\n\\n/// @notice Thrown when a fee window has already started.\\nerror FEE_WINDOW_ALREADY_STARTED();\\n\\n/// @notice Thrown when a fee window duration is too long.\\nerror FEE_WINDOW_TOO_LONG(uint256 windowTime);\\n\\n/*//////////////////////////////////////////////////////////////////////////\\n                                UTILITY ERRORS\\n//////////////////////////////////////////////////////////////////////////*/\\n\\n/// @notice Thrown when a cast operation fails.\\nerror CAST();\\n\\n/// @notice Thrown when an operation has surpassed its deadline.\\nerror EXPIRED(uint256 deadline);\\n\",\"keccak256\":\"0x8e02bff5533d9c0f73ccad89c6b292c75db6e36baabf918004ee078ffb9bbdbe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b506040516111c23803806111c283398101604081905261002f9161009b565b6001600160a01b0381166080526100453361004b565b506100cb565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ad57600080fd5b81516001600160a01b03811681146100c457600080fd5b9392505050565b6080516110cf6100f36000396000818160c3015281816103b6015261044801526110cf6000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461011a578063b7f263841461012b578063bb0e70e01461013e578063d4c55a281461015e578063f2fde38b1461017157600080fd5b806341976e09146100985780635001f3b5146100be57806353997a5f146100fd578063715018a614610112575b600080fd5b6100ab6100a6366004610d80565b610184565b6040519081526020015b60405180910390f35b6100e57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100b5565b61011061010b366004610da4565b61066c565b005b61011061071f565b6000546001600160a01b03166100e5565b6100ab610139366004610d80565b610733565b6100ab61014c366004610d80565b60016020526000908152604090205481565b6100ab61016c366004610d80565b610a41565b61011061017f366004610d80565b610bf2565b6000808290506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ee9190610dd0565b905080600003610202575060009392505050565b6000826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610de9565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cc9190610de9565b905060006102d985610a41565b905060006102e686610733565b6001600160a01b03851660009081526001602052604090205490915061030d838383610c6b565b61032a57604051637114d53360e01b815260040160405180910390fd5b600080886001600160a01b031663c4a7761e6040518163ffffffff1660e01b81526004016040805180830381865afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e9190610e06565b6040516341976e0960e01b81526001600160a01b038a811660048301529294509092506000917f000000000000000000000000000000000000000000000000000000000000000016906341976e09906024016020604051808303816000875af11580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104239190610dd0565b6040516341976e0960e01b81526001600160a01b0389811660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906341976e09906024016020604051808303816000875af1158015610491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b59190610dd0565b90506000896001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b9190610e2a565b60ff1690506000896001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190610e2a565b60ff169050600061059682600a610f47565b6105a08588610f53565b6105aa9190610f72565b6105b584600a610f47565b6105bf878a610f53565b6105c99190610f72565b6105d39190610f94565b90508c8e6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106389190610e2a565b61064390600a610fa7565b61064d9083610f53565b6106579190610f72565b9e505050505050505050505050505050919050565b610674610cc1565b6001600160a01b03821661069b5760405163538ba4f960e01b815260040160405180910390fd5b6103e88111156106c657604051631a6b806360e21b8152600481018290526024015b60405180910390fd5b6001600160a01b03821660008181526001602052604090819020839055517fbcc48d4ac37a64aecfe6bd804bc60445843735ed2ea3a4eb2be82fd9817601b5906107139084815260200190565b60405180910390a25050565b610727610cc1565b6107316000610d1b565b565b600080826001600160a01b031663f62073266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107989190610fb6565b90506202a30063ffffffff821611156107cc5760405163f5d3e54f60e01b815263ffffffff821660048201526024016106bd565b610e1063ffffffff821610156107fd57604051635cab37cb60e11b815263ffffffff821660048201526024016106bd565b600073bedac0aadbf32514eB67c233C9b365513741B2666382413489856001600160a01b03166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610857573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087b9190610de9565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015263ffffffff851660248201526044016040805180830381865af41580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee9190610ff3565b50905073bedac0aadbf32514eB67c233C9b365513741B2666343c57a2782670de0b6b3a7640000876001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610de9565b886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d99190610de9565b6040518563ffffffff1660e01b81526004016109f89493929190611036565b602060405180830381865af4158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a399190610dd0565b949350505050565b600073bedac0aadbf32514eB67c233C9b365513741B2666343c57a27836001600160a01b031663065e53606040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf919061106b565b670de0b6b3a7640000856001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a9190610de9565b866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8c9190610de9565b6040518563ffffffff1660e01b8152600401610bab9493929190611036565b602060405180830381865af4158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec9190610dd0565b92915050565b610bfa610cc1565b6001600160a01b038116610c5f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106bd565b610c6881610d1b565b50565b600080838511610c7b5783610c7d565b845b90506000848611610c8e5785610c90565b845b90508382612710610ca18483611086565b610cab9190610f53565b610cb59190610f72565b11159695505050505050565b6000546001600160a01b031633146107315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610c6857600080fd5b600060208284031215610d9257600080fd5b8135610d9d81610d6b565b9392505050565b60008060408385031215610db757600080fd5b8235610dc281610d6b565b946020939093013593505050565b600060208284031215610de257600080fd5b5051919050565b600060208284031215610dfb57600080fd5b8151610d9d81610d6b565b60008060408385031215610e1957600080fd5b505080516020909101519092909150565b600060208284031215610e3c57600080fd5b815160ff81168114610d9d57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610e9e578160001904821115610e8457610e84610e4d565b80851615610e9157918102915b93841c9390800290610e68565b509250929050565b600082610eb557506001610bec565b81610ec257506000610bec565b8160018114610ed85760028114610ee257610efe565b6001915050610bec565b60ff841115610ef357610ef3610e4d565b50506001821b610bec565b5060208310610133831016604e8410600b8410161715610f21575081810a610bec565b610f2b8383610e63565b8060001904821115610f3f57610f3f610e4d565b029392505050565b6000610d9d8383610ea6565b6000816000190483118215151615610f6d57610f6d610e4d565b500290565b600082610f8f57634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610bec57610bec610e4d565b6000610d9d60ff841683610ea6565b600060208284031215610fc857600080fd5b815163ffffffff81168114610d9d57600080fd5b8051600281900b8114610fee57600080fd5b919050565b6000806040838503121561100657600080fd5b61100f83610fdc565b915060208301516001600160801b038116811461102b57600080fd5b809150509250929050565b60029490940b84526001600160801b039290921660208401526001600160a01b03908116604084015216606082015260800190565b60006020828403121561107d57600080fd5b610d9d82610fdc565b81810381811115610bec57610bec610e4d56fea264697066735822122019dae3b39cccc097359dee4f5a7d8e2302a4654d1495461724cef58edbf80cfc64736f6c63430008100033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461011a578063b7f263841461012b578063bb0e70e01461013e578063d4c55a281461015e578063f2fde38b1461017157600080fd5b806341976e09146100985780635001f3b5146100be57806353997a5f146100fd578063715018a614610112575b600080fd5b6100ab6100a6366004610d80565b610184565b6040519081526020015b60405180910390f35b6100e57f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100b5565b61011061010b366004610da4565b61066c565b005b61011061071f565b6000546001600160a01b03166100e5565b6100ab610139366004610d80565b610733565b6100ab61014c366004610d80565b60016020526000908152604090205481565b6100ab61016c366004610d80565b610a41565b61011061017f366004610d80565b610bf2565b6000808290506000816001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156101ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101ee9190610dd0565b905080600003610202575060009392505050565b6000826001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610242573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102669190610de9565b90506000836001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cc9190610de9565b905060006102d985610a41565b905060006102e686610733565b6001600160a01b03851660009081526001602052604090205490915061030d838383610c6b565b61032a57604051637114d53360e01b815260040160405180910390fd5b600080886001600160a01b031663c4a7761e6040518163ffffffff1660e01b81526004016040805180830381865afa15801561036a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061038e9190610e06565b6040516341976e0960e01b81526001600160a01b038a811660048301529294509092506000917f000000000000000000000000000000000000000000000000000000000000000016906341976e09906024016020604051808303816000875af11580156103ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104239190610dd0565b6040516341976e0960e01b81526001600160a01b0389811660048301529192506000917f000000000000000000000000000000000000000000000000000000000000000016906341976e09906024016020604051808303816000875af1158015610491573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b59190610dd0565b90506000896001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051b9190610e2a565b60ff1690506000896001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610560573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105849190610e2a565b60ff169050600061059682600a610f47565b6105a08588610f53565b6105aa9190610f72565b6105b584600a610f47565b6105bf878a610f53565b6105c99190610f72565b6105d39190610f94565b90508c8e6001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610614573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106389190610e2a565b61064390600a610fa7565b61064d9083610f53565b6106579190610f72565b9e505050505050505050505050505050919050565b610674610cc1565b6001600160a01b03821661069b5760405163538ba4f960e01b815260040160405180910390fd5b6103e88111156106c657604051631a6b806360e21b8152600481018290526024015b60405180910390fd5b6001600160a01b03821660008181526001602052604090819020839055517fbcc48d4ac37a64aecfe6bd804bc60445843735ed2ea3a4eb2be82fd9817601b5906107139084815260200190565b60405180910390a25050565b610727610cc1565b6107316000610d1b565b565b600080826001600160a01b031663f62073266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610774573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107989190610fb6565b90506202a30063ffffffff821611156107cc5760405163f5d3e54f60e01b815263ffffffff821660048201526024016106bd565b610e1063ffffffff821610156107fd57604051635cab37cb60e11b815263ffffffff821660048201526024016106bd565b600073__$50975bd21082d4b196a7c644d5cf6229e7$__6382413489856001600160a01b03166316f0115b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610857573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087b9190610de9565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015263ffffffff851660248201526044016040805180830381865af41580156108ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ee9190610ff3565b50905073__$50975bd21082d4b196a7c644d5cf6229e7$__6343c57a2782670de0b6b3a7640000876001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610953573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109779190610de9565b886001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa1580156109b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d99190610de9565b6040518563ffffffff1660e01b81526004016109f89493929190611036565b602060405180830381865af4158015610a15573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a399190610dd0565b949350505050565b600073__$50975bd21082d4b196a7c644d5cf6229e7$__6343c57a27836001600160a01b031663065e53606040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abf919061106b565b670de0b6b3a7640000856001600160a01b0316630dfe16816040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2a9190610de9565b866001600160a01b031663d21220a76040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b68573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8c9190610de9565b6040518563ffffffff1660e01b8152600401610bab9493929190611036565b602060405180830381865af4158015610bc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bec9190610dd0565b92915050565b610bfa610cc1565b6001600160a01b038116610c5f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106bd565b610c6881610d1b565b50565b600080838511610c7b5783610c7d565b845b90506000848611610c8e5785610c90565b845b90508382612710610ca18483611086565b610cab9190610f53565b610cb59190610f72565b11159695505050505050565b6000546001600160a01b031633146107315760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106bd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114610c6857600080fd5b600060208284031215610d9257600080fd5b8135610d9d81610d6b565b9392505050565b60008060408385031215610db757600080fd5b8235610dc281610d6b565b946020939093013593505050565b600060208284031215610de257600080fd5b5051919050565b600060208284031215610dfb57600080fd5b8151610d9d81610d6b565b60008060408385031215610e1957600080fd5b505080516020909101519092909150565b600060208284031215610e3c57600080fd5b815160ff81168114610d9d57600080fd5b634e487b7160e01b600052601160045260246000fd5b600181815b80851115610e9e578160001904821115610e8457610e84610e4d565b80851615610e9157918102915b93841c9390800290610e68565b509250929050565b600082610eb557506001610bec565b81610ec257506000610bec565b8160018114610ed85760028114610ee257610efe565b6001915050610bec565b60ff841115610ef357610ef3610e4d565b50506001821b610bec565b5060208310610133831016604e8410600b8410161715610f21575081810a610bec565b610f2b8383610e63565b8060001904821115610f3f57610f3f610e4d565b029392505050565b6000610d9d8383610ea6565b6000816000190483118215151615610f6d57610f6d610e4d565b500290565b600082610f8f57634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610bec57610bec610e4d565b6000610d9d60ff841683610ea6565b600060208284031215610fc857600080fd5b815163ffffffff81168114610d9d57600080fd5b8051600281900b8114610fee57600080fd5b919050565b6000806040838503121561100657600080fd5b61100f83610fdc565b915060208301516001600160801b038116811461102b57600080fd5b809150509250929050565b60029490940b84526001600160801b039290921660208401526001600160a01b03908116604084015216606082015260800190565b60006020828403121561107d57600080fd5b610d9d82610fdc565b81810381811115610bec57610bec610e4d56fea264697066735822122019dae3b39cccc097359dee4f5a7d8e2302a4654d1495461724cef58edbf80cfc64736f6c63430008100033",
  "libraries": {
    "UniV3WrappedLibContainer": "0xbedac0aadbf32514eB67c233C9b365513741B266"
  },
  "devdoc": {
    "author": "BlueberryProtocol",
    "details": "The logic of this oracle is using legacy & traditional mathematics of Uniswap V2 Lp Oracle.      Base token prices are fetched from Chainlink or Band Protocol.      To prevent flashloan price manipulations, it compares spot & twap prices from Uni V3 Pool.",
    "events": {
      "SetPriceDeviation(address,uint256)": {
        "params": {
          "maxPriceDeviation": "The new maximum price deviation (in 1e18 format).",
          "token": "The address of the token."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_base": "The base oracle instance."
        }
      },
      "getPrice(address)": {
        "params": {
          "token": "The vault token to get the price of."
        },
        "returns": {
          "_0": "price USD price of token in 18 decimal"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setPriceDeviation(address,uint256)": {
        "details": "Input token is the underlying token of ICHI Vaults which is token0 or token1 of Uni V3 Pool",
        "params": {
          "maxPriceDeviation": "Max price deviation (in 1e18) of price feeds",
          "token": "Token to price deviation"
        }
      },
      "spotPrice0InToken1(address)": {
        "details": "Returns token0 price of 1e18 amount",
        "params": {
          "vault": "ICHI Vault address"
        },
        "returns": {
          "_0": "price spot price of token0 quoted in token1"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "twapPrice0InToken1(address)": {
        "details": "Returns token0 price of 1e18 amount",
        "params": {
          "vault": "ICHI Vault address"
        },
        "returns": {
          "_0": "price spot price of token0 quoted in token1"
        }
      }
    },
    "title": "Ichi Vault Oracle",
    "version": 1
  },
  "userdoc": {
    "errors": {
      "EXCEED_DEVIATION()": [
        {
          "notice": "Thrown when the deviation value exceeds the threshold."
        }
      ],
      "OUT_OF_DEVIATION_CAP(uint256)": [
        {
          "notice": "Thrown when the price deviation exceeds allowed limits."
        }
      ],
      "TOO_LONG_DELAY(uint256)": [
        {
          "notice": "Thrown when the delay time exceeds allowed limits."
        }
      ],
      "TOO_LOW_MEAN(uint256)": [
        {
          "notice": "Thrown when the mean price is below the acceptable threshold."
        }
      ],
      "ZERO_ADDRESS()": [
        {
          "notice": "Thrown when the address provided is the zero address."
        }
      ]
    },
    "events": {
      "SetPriceDeviation(address,uint256)": {
        "notice": "Event emitted when the maximum price deviation for a token is set or updated."
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructs a new instance of the contract."
      },
      "getPrice(address)": {
        "notice": "Return vault token price in USD, with 18 decimals of precision."
      },
      "maxPriceDeviations(address)": {
        "notice": "Mapping to keep track of the maximum price deviation allowed for each token"
      },
      "setPriceDeviation(address,uint256)": {
        "notice": "Set price deviations for given token"
      },
      "spotPrice0InToken1(address)": {
        "notice": "Get token0 spot price quoted in token1"
      },
      "twapPrice0InToken1(address)": {
        "notice": "Get token0 twap price quoted in token1"
      }
    },
    "notice": "Oracle contract provides price feeds of Ichi Vault tokens",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3374,
        "contract": "contracts/oracle/IchiVaultOracle.sol:IchiVaultOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 28464,
        "contract": "contracts/oracle/IchiVaultOracle.sol:IchiVaultOracle",
        "label": "maxPriceDeviations",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}